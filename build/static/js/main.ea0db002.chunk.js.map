{"version":3,"sources":["assets/rss.png","helpers/logo.svg","components/layout/Navbar.js","components/layout/Footer.js","store.js","reducers/notifyReducer.js","reducers/feedsReducer.js","config/config.js","actions/types.js","components/layout/Search.js","components/layout/Result.js","components/layout/ResultList.js","components/feeds/Feed_Table.js","assets/popular_list.js","components/layout/Popular.js","helpers/Spinner.js","components/feeds/Feed_Dashboard.js","components/feeds/Add_Feed.js","components/feeds/Edit_Feed.js","actions/notifyActions.js","components/layout/Alert.js","auth/Login.js","auth/Register.js","helpers/withAuthProtect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","state","isAuthenticated","onLogoutClick","e","preventDefault","props","firebase","history","logout","then","push","catch","err","console","log","this","auth","AppBar","position","Toolbar","Grid","item","xs","className","to","style","float","src","RSS_LOGO","alt","color","email","href","onClick","uid","Component","compose","withRouter","firebaseConnect","connect","useStyles","makeStyles","theme","root","flexGrow","background","marginTop","textOne","textTwo","Footer","classes","Date","getFullYear","firebaseConfig","initialState","message","messageType","feeds","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","store","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestore","firestoreReducer","notify","action","type","feedsFunc","Search","onChange","setState","target","name","value","enabled","input_url","handleSearchChange","bind","onSubmit","getFeed","TextField","id","label","placeholder","margin","variant","Button","disabled","width","maxWidth","display","textAlign","ListItemLink","ListItem","button","component","rel","Result","List","aria-label","ListItemIcon","link","ListItemText","primary","title","description","Divider","ResultList","renderFeedList","program_title","creator","program_image","program_description","map","returnFeeds","feed","i","key","index","enclosure","image","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","default","TableRow","spacing","overflowX","table","minWidth","fontWeight","isEmpty","empty","JSON","parse","empty2","Object","keys","length","Paper","Table","TableHead","align","TableBody","feedLink","scope","feedName","text","cursor","pathname","url","Popular","Data","Spinner","logo","Dashboard","fetching","error","elements","parser","Parser","customFields","keepArray","a","async","parseURL","arr","items","forEach","newArr","slice","program_link","handleClose","renderAlert","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ordered","firestoreConnect","collection","where","AddFeed","docId","uuidv4","newFeed","userId","doc","set","padding","textDecoration","Fab","helperText","fullWidth","EditFeed","updClient","update","onDeleteClick","delete","isFetching","location","setTimeout","defaultValue","notifyUser","Alert","Login","password","login","Container","Avatar","Typography","noValidate","required","autoComplete","container","Register","createUser","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","isInitializing","profile","isLoaded","authenticatedSelector","UserIsNotAuthenticated","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea0db002.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rss.ce3bf04d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.0b068a0a.svg\";","import React, { Component, Fragment } from \"react\";\nimport RSS_LOGO from \"../../assets/rss.png\";\nimport { withRouter, NavLink, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\n\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass Navbar extends Component {\n  state = {\n    isAuthenticated: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props;\n    if (auth.uid) {\n      return { isAuthenticated: true };\n    } else {\n      return { isAuthenticated: false };\n    }\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault();\n\n    const { firebase, history } = this.props;\n    firebase\n      .logout()\n      .then(() => history.push(\"/login\"))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { isAuthenticated } = this.state;\n    const { auth } = this.props;\n\n    return (\n      <Fragment>\n        {\" \"}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Grid item xs={4} className=\"nav-left\">\n              <Link to=\"/\" style={{ float: \"left\" }}>\n                <img className=\"brand\" src={RSS_LOGO} alt=\"Reactive RSS\" />{\" \"}\n                Reactive RSS\n              </Link>\n            </Grid>\n            <Grid item xs={8}>\n              {!isAuthenticated ? (\n                <div className=\"auth-links\">\n                  <NavLink to=\"/login\">Login</NavLink>\n                  <NavLink to=\"/singup\">Singup</NavLink>\n                </div>\n              ) : null}\n\n              {isAuthenticated ? (\n                <div className=\"nav-right\">\n                  <p>\n                    Welcome,{\" \"}\n                    <span style={{ color: \"#ff3817\" }}>{auth.email}</span>\n                  </p>\n                  <NavLink to=\"/add\" className=\"add-feed\">\n                    Add Feed\n                  </NavLink>\n                  <a href=\"#!\" className=\"logout\" onClick={this.onLogoutClick}>\n                    Logout\n                  </a>\n                </div>\n              ) : null}\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </Fragment>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nexport default compose(\n  withRouter,\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth\n  }))\n)(Navbar);\n","import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    background: \"#f1f1f1\",\n    marginTop: \"5rem\"\n  },\n  textOne: {\n    color: \"#1e90ff\"\n  },\n  textTwo: {\n    color: \"#d60000\"\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <div className={classes.root}>\n        <div className=\"container\">\n          <span className={classes.textOne}>Dzenis H.</span> | ©{\" \"}\n          {new Date().getFullYear()} Copyright |{\" \"}\n          <span className={classes.textTwo}> Reactive RSS</span>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import { createStore, combineReducers, compose } from \"redux\";\n\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/firestore\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\n// Custom Reducers\nimport notifyReducer from \"./reducers/notifyReducer\";\nimport feedsReducer from \"./reducers/feedsReducer\";\n\nimport { config } from \"./config/config\";\n\nlet firebaseConfig;\n\n//  YOUR FIREBASE CONFIGS GO HERE ...  ---> src\\config\\config_dev.js\nfirebaseConfig = {\n  apiKey: config.apiKey,\n  authDomain: config.authDomain,\n  databaseURL: config.databaseURL,\n  projectId: config.projectId,\n  storageBucket: config.storageBucket,\n  messagingSenderId: config.messagingSenderId,\n  appId: config.appId,\n};\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n};\n\n// Init firebase instance\n// firebase.initializeApp(firebaseConfig);\nfirebase.initializeApp(firebaseConfig);\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase)\n)(createStore);\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  notify: notifyReducer,\n  feedsFunc: feedsReducer,\n});\n\n// Create initial state\nconst initialState = {};\n\n// Create store\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase)\n    // THE FOLLOWING LINE IS ONLY USEFUL IN THE DEVELOPMENT\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import { NOTIFY_USER } from \"../actions/types\";\n\nconst initialState = {\n  message: null,\n  messageType: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case NOTIFY_USER:\n      return {\n        ...state,\n        message: action.message,\n        messageType: action.messageType\n      };\n    default:\n      return state;\n  }\n}\n","import { REMOVE_FEEDS } from \"../actions/types\";\n\nconst initialState = {\n  feeds: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case REMOVE_FEEDS:\n      return {\n        ...state,\n        feeds: action.feeds\n      };\n    default:\n      return state;\n  }\n}\n","export const config = {\r\n  //  YOUR FIREBASE CONFIG FILE GOES HERE ...\r\n  apiKey: \"AIzaSyD1Tbn5zdnGKOD5RDvvxXkGQBqOR6GQDes\",\r\n  authDomain: \"reactive-feeds.firebaseapp.com\",\r\n  databaseURL: \"https://reactive-feeds.firebaseio.com\",\r\n  projectId: \"reactive-feeds\",\r\n  storageBucket: \"reactive-feeds.appspot.com\",\r\n  messagingSenderId: \"512493791420\",\r\n  appId: \"1:512493791420:web:b5dc3882054f43c48dc8b9\",\r\n};\r\n","export const NOTIFY_USER = \"NOTIFY_USER\";\nexport const REMOVE_FEEDS = \"REMOVE_FEEDSs\";\n","import React, { Component, Fragment } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enabled: true,\n      input_url: \"\"\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchChange(e) {\n    const value = e.target.value;\n\n    if (value !== \"\") {\n      this.setState({ enabled: false });\n    } else {\n      this.setState({ enabled: true });\n    }\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <Fragment>\n        <h4 className=\"blueColor\">You can check your feeds here:</h4>\n        <form onSubmit={this.props.getFeed}>\n          <TextField\n            id=\"outlined-with-placeholder\"\n            label=\"Link goes here:\"\n            placeholder=\"Enter a website or feed url\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleSearchChange}\n            name=\"feedLink\"\n          />\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={this.state.enabled}\n            >\n              Show feed{\" \"}\n            </Button>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 555,\n    margin: \"auto\",\n    color: \"#6666ff\",\n    display: \"flex\",\n    textAlign: \"center\"\n  }\n}));\n\nfunction ListItemLink(props) {\n  return (\n    <ListItem\n      button\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      {...props}\n    />\n  );\n}\n\nconst Result = props => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button>\n          <ListItemIcon>\n            <ArrowRightAltIcon />\n          </ListItemIcon>\n          <ListItemLink href={props.link}>\n            <ListItemText primary={props.title} />\n          </ListItemLink>\n        </ListItem>\n        <p> {props.description}</p>\n        <Divider />\n      </List>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { Component, Fragment } from \"react\";\nimport Result from \"./Result\";\n\nclass ResultList extends Component {\n  renderFeedList = () => {\n    return (\n      <Fragment>\n        <h1>\n          {this.props.program_title} by {this.props.creator}\n        </h1>\n        <img alt={this.props.program_title} src={this.props.program_image} />\n        <p>{this.props.program_description}</p>\n        {this.props.feeds.map(this.returnFeeds)}\n      </Fragment>\n    );\n  };\n\n  returnFeeds = (feed, i) => {\n    return (\n      <Result\n        key={i}\n        index={i}\n        title={feed.title}\n        enclosure={feed.enclosure}\n        link={feed.link ? feed.link : \"json data is null or undefined\"}\n        image={this.props.program_image}\n        description={feed.description}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Fragment>{this.props.feeds ? this.renderFeedList() : null}</Fragment>\n    );\n  }\n}\n\nexport default ResultList;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\n\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst TableComponent = (props) => {\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  }))(TableRow);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n      overflowX: \"auto\",\n    },\n    table: {\n      minWidth: 700,\n    },\n    name: {\n      color: \"#6666ff\",\n      fontWeight: 700,\n    },\n    link: {\n      color: \"#cc0000\",\n    },\n  }));\n\n  const {\n    feeds,\n    auth: { isEmpty },\n  } = props;\n  const empty = isEmpty ? JSON.parse(isEmpty) : isEmpty;\n  const empty2 = feeds ? Object.keys(feeds).length !== 0 : null;\n\n  const classes = useStyles();\n  // If the 'isEmpty' propery is === false that means the user is logged in\n  // In other words, show the table containing the 'protected/ saved' data ;)\n  if (!empty && empty2) {\n    return (\n      <Fragment>\n        <Paper className={classes.root}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell className={classes.link}>\n                  FEED NAME:\n                </StyledTableCell>\n                <StyledTableCell className={classes.name} align=\"right\">\n                  FEED URL:\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">EDIT</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {feeds.map((feed) => (\n                <StyledTableRow key={feed.feedLink + feed.id}>\n                  <StyledTableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.name}\n                  >\n                    {feed.feedName}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\" className={classes.link}>\n                    <CopyToClipboard text={feed.feedLink}>\n                      <span\n                        style={{ cursor: \"copy\" }}\n                        title=\"Copy to clipboard\"\n                      >\n                        {feed.feedLink}\n                      </span>\n                    </CopyToClipboard>\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    <Link\n                      to={{ pathname: `/edit/${feed.id}`, state: { feed } }}\n                    >\n                      <i\n                        className=\"fas fa-pencil-alt\"\n                        style={{ float: \"right\" }}\n                      />\n                    </Link>\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Fragment>\n    );\n  }\n  return (\n    <h4 className=\"redColor\">\n      You didn't save any RSS feeds, yet. As soon as you do they will appear\n      here.\n    </h4>\n  );\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth,\n  }))\n)(TableComponent);\n","export default [\r\n  {\r\n    id: 1,\r\n    name: \"The Apology Line\",\r\n    url: \"https://rss.art19.com/apology-line\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"The Daily\",\r\n    url: \"http://rss.art19.com/the-daily\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Crime Junkie\",\r\n    url: \"https://feeds.megaphone.fm/ADL9840290619\",\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nimport Data from \"../../assets/popular_list\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst Popular = () => {\r\n  return (\r\n    <>\r\n      <h3>Popular RSS feeds:</h3>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Paper style={{ width: 666, margin: \"auto\" }}>\r\n          <Table style={{ width: 600, margin: \"auto\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                  FEED NAME:\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  style={{ color: \"blue\", fontWeight: \"bolder\" }}\r\n                >\r\n                  FEED URL:\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Data.map((item) => {\r\n                return (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ color: \"red\" }}\r\n                    >\r\n                      {item.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" style={{ color: \"blue\" }}>\r\n                      <CopyToClipboard text={item.url}>\r\n                        <span\r\n                          style={{ cursor: \"copy\" }}\r\n                          title=\"Copy to clipboard\"\r\n                        >\r\n                          {item.url}\r\n                        </span>\r\n                      </CopyToClipboard>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","import React, { Fragment } from \"react\";\nimport logo from \"./logo.svg\";\n\nconst Spinner = () => {\n  return (\n    <Fragment>\n      <img src={logo} alt=\"\" className=\"App-logo\" />\n    </Fragment>\n  );\n};\n\nexport default Spinner;\n","import React, { Component, Fragment } from \"react\";\nimport Parser from \"rss-parser\";\n\nimport Search from \"../layout/Search\";\nimport ResultList from \"../layout/ResultList\";\nimport MainTableComponent from \"./Feed_Table\";\nimport Popular from \"../layout/Popular\";\n\nimport LoadingScreen from \"../../helpers/Spinner\";\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  state = {\n    feeds: null,\n    fetching: false,\n    program_title: null,\n    program_description: null,\n    program_image: null,\n    error: null,\n  };\n\n  getFeed = (e) => {\n    this.setState({ fetching: !this.state.fetching });\n    e.preventDefault();\n    const feedLink = e.target.elements.feedLink.value;\n    let parser = new Parser({\n      customFields: {\n        item: [[\"enclosure\", { keepArray: true }]],\n      },\n    });\n    // const CORS_PROXY = \"https://thingproxy.freeboard.io/fetch/\";\n\n    if (feedLink) {\n      (async () => {\n        try {\n          // let feed = await parser.parseURL(`${CORS_PROXY}${feedLink}`);\n          let feed = await parser.parseURL(`${feedLink}`);\n          let arr = [];\n          feed.items.forEach((item) => {\n            arr.push(item);\n          });\n          const newArr = arr.slice(0, 10); // limit the output to 10\n          this.setState({\n            feeds: newArr,\n            program_title: feed.title,\n            fetching: !this.state.fetching,\n            program_image: feed.image.url,\n            program_description: feed.description,\n            program_link: feed.link,\n            error: false,\n          });\n        } catch (err) {\n          console.log(err);\n          this.setState({ error: true, fetching: false });\n        }\n      })();\n    } else {\n      return;\n    }\n  };\n\n  handleClose = () => {\n    this.setState({\n      error: false,\n      fetching: false,\n    });\n  };\n\n  renderAlert = () => {\n    return (\n      <Fragment>\n        <Dialog\n          open={this.state.error}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Error Parsing Feed</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Please try retyping your RSS feed, or try a new one.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  };\n\n  render() {\n    const {\n      auth: { isEmpty },\n    } = this.props;\n    const empty = isEmpty ? JSON.parse(isEmpty) : null;\n\n    return (\n      <Fragment>\n        <Search\n          getFeed={this.getFeed}\n          onClick={() => this.setState({ fetching: true })}\n        />\n        {this.state.error ? this.renderAlert() : <div />}\n        {!this.state.fetching ? <p /> : <LoadingScreen />}\n        <ResultList\n          feeds={this.state.feeds}\n          program_title={this.state.program_title}\n          program_description={this.state.program_description}\n          program_image={this.state.program_image}\n          fetching={this.props.fetching}\n        />\n        {!empty ? (\n          <MainTableComponent feeds={this.props.feeds} />\n        ) : (\n          <Fragment>\n            <br />\n            <hr />\n            <Popular />\n            <h4 className=\"redColor\">\n              NOTE: In order to add/ edit/ delete feeds you have to be logged\n              in.\n            </h4>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    feeds: state.firestore.ordered.feeds,\n  };\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect((props) => {\n    if (!props.auth.uid) return [];\n    return [{ collection: \"feeds\", where: [[\"userId\", \"==\", props.auth.uid]] }];\n  })\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\n\nclass AddFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedName: \"\",\n      feedLink: \"\",\n      enabled: true,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchChange(e) {\n    const value = e.target.value;\n\n    if (value !== \"\") {\n      this.setState({ enabled: false });\n    } else {\n      this.setState({ enabled: true });\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { feedName, feedLink } = this.state;\n    const { uid } = this.props.auth;\n    const docId = uuidv4();\n\n    const newFeed = {\n      userId: uid,\n      feedName,\n      feedLink,\n      docId,\n    };\n\n    const { firestore, history } = this.props;\n\n    firestore\n      .collection(\"feeds\")\n      .doc(docId)\n      .set(newFeed)\n      .then(() => history.push(\"/\"))\n      .catch((err) => console.log(err));\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <div\n        style={{\n          margin: \"1.5rem\",\n          padding: \"2rem\",\n        }}\n      >\n        <div>\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <Fab color=\"primary\" aria-label=\"back\">\n              <i className=\"fas fa-arrow-circle-left fa-2x\" />{\" \"}\n            </Fab>\n          </Link>\n        </div>\n\n        <div>\n          <form onSubmit={this.onSubmit}>\n            <TextField\n              type=\"text\"\n              name=\"feedName\"\n              onChange={(e) => {\n                this.handleSearchChange(e);\n                this.onChange(e);\n              }}\n              id=\"standard-full-width\"\n              label=\"\"\n              style={{ margin: 8 }}\n              placeholder=\"Add the name\"\n              helperText=\"NAME\"\n              fullWidth\n              margin=\"normal\"\n              value={this.state.feedName}\n            />\n            <TextField\n              type=\"text\"\n              name=\"feedLink\"\n              onChange={(e) => {\n                this.handleSearchChange(e);\n                this.onChange(e);\n              }}\n              id=\"standard-full-width\"\n              label=\"\"\n              style={{ margin: 8 }}\n              placeholder=\"Add the link\"\n              helperText=\"LINK\"\n              fullWidth\n              margin=\"normal\"\n              value={this.state.feedLink}\n            />\n            <div>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={this.state.enabled}\n              >\n                Save it{\" \"}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddFeed.propTypes = {\n  firestore: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    feeds: state.firestore.ordered.feeds,\n  };\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect((props) => {\n    if (!props.auth.uid) return [];\n    return [{ collection: \"feeds\" }];\n  })\n)(AddFeed);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport LoadingScreen from \"../../helpers/Spinner\";\n\nclass EditFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      link: \"\",\n      docId: \"\",\n      isFetching: true,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      feedName,\n      feedLink,\n      docId,\n    } = this.props.history.location.state.feed;\n\n    setTimeout(() => {\n      this.setState({\n        name: feedName,\n        link: feedLink,\n        docId,\n        isFetching: false,\n      });\n    }, 300);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { firestore, history } = this.props;\n    const { name, link, docId } = this.state;\n\n    // Updated Client\n    const updClient = {\n      feedName: name,\n      feedLink: link,\n    };\n\n    // Update client in firestore\n    firestore\n      .update({ collection: \"feeds\", doc: docId }, updClient)\n      .then(history.push(\"/\"));\n  };\n\n  // Delete client\n  onDeleteClick = () => {\n    const { firestore, history } = this.props;\n    const { docId } = this.state;\n\n    firestore\n      .delete({ collection: \"feeds\", doc: docId })\n      .then(history.push(\"/\"))\n      .catch((err) => console.log(err));\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, link, isFetching } = this.state;\n\n    if (!isFetching) {\n      return (\n        <div\n          style={{\n            margin: \"1.5rem\",\n            padding: \"2rem\",\n          }}\n        >\n          <div>\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n              <Fab color=\"primary\" aria-label=\"back\">\n                <i className=\"fas fa-arrow-circle-left fa-2x\" />{\" \"}\n              </Fab>\n            </Link>\n          </div>\n\n          <Button\n            style={{ float: \"right\" }}\n            color=\"secondary\"\n            aria-label=\"delete\"\n            onClick={this.onDeleteClick}\n          >\n            <i className=\"far fa-trash-alt fa-2x\" style={{ margin: \"2px\" }} />{\" \"}\n            DELETE\n          </Button>\n\n          <div>\n            <form onSubmit={this.onSubmit}>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                onChange={this.onChange}\n                id=\"standard-full-width\"\n                label=\"\"\n                style={{ margin: 8 }}\n                placeholder=\"Edit name\"\n                helperText=\"NAME\"\n                fullWidth\n                margin=\"normal\"\n                defaultValue={name}\n              />\n              <TextField\n                type=\"text\"\n                name=\"link\"\n                onChange={this.onChange}\n                id=\"standard-full-width\"\n                label=\"\"\n                style={{ margin: 8 }}\n                placeholder=\"Edit link\"\n                helperText=\"LINK\"\n                fullWidth\n                margin=\"normal\"\n                defaultValue={link}\n              />\n              <div>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                  Update it{\" \"}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    } else {\n      return <LoadingScreen />;\n    }\n  }\n}\n\nEditFeed.propTypes = {\n  firestore: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    feeds: state.firestore.ordered.feeds,\n  };\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect((props) => {\n    if (!props.auth.uid) return [];\n    return [{ collection: \"feeds\", where: [[\"userId\", \"==\", props.auth.uid]] }];\n  })\n)(EditFeed);\n","import { NOTIFY_USER } from \"../actions/types\";\n\nexport const notifyUser = (message, messageType) => {\n  return {\n    type: NOTIFY_USER,\n    message,\n    messageType\n  };\n};\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { notifyUser } from \"../../actions/notifyActions\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\n\nclass Alert extends Component {\n  handleClose = () => {\n    const { notifyUser } = this.props;\n    // Clean the error state so that the <Dialog /> can be closed ;)\n    notifyUser(\"\", \"\");\n  };\n\n  renderAlert = () => {\n    const { message, messageType } = this.props;\n\n    return (\n      <Fragment>\n        <Dialog\n          open={messageType === \"error\" ? true : false}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <span style={{ color: \"#d60000\" }}> Oooopsss :(</span>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <strong>{message}</strong>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  };\n\n  render() {\n    return <Fragment>{this.renderAlert()}</Fragment>;\n  }\n}\n\nAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n  messageType: PropTypes.string.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Alert);\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport Alert from \"../components/layout/Alert\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { notifyUser } from \"../actions/notifyActions\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { firebase, history, notifyUser } = this.props;\n    const { email, password } = this.state;\n\n    firebase\n      .login({\n        email,\n        password\n      })\n      .then(() => history.push(\"/\"))\n      .catch(err => notifyUser(\"Invalid Login Credentials\", \"error\"));\n  };\n\n  render() {\n    const { message, messageType } = this.props.notify;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Fragment>\n          <Avatar style={{ margin: \"auto\", marginTop: \"1rem\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form onSubmit={this.onSubmit} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.onChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.onChange}\n            />\n\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item style={{ margin: \"auto\" }}>\n                <Link to=\"/singup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n          {message ? (\n            <Alert message={message} messageType={messageType} />\n          ) : null}\n        </Fragment>{\" \"}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Login);\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { notifyUser } from \"../actions/notifyActions\";\nimport Alert from \"../components/layout/Alert\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass Register extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { firebase, history, notifyUser } = this.props;\n    const { email, password } = this.state;\n\n    // Register with firebase\n    firebase\n      .createUser({ email, password })\n      .then(() => history.push(\"/\"))\n      .catch(err => notifyUser(\"That User Already Exists\", \"error\"));\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { message, messageType } = this.props.notify;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Fragment>\n          <Avatar style={{ margin: \"auto\", marginTop: \"1rem\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registration\n          </Typography>\n          <form onSubmit={this.onSubmit} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.onChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.onChange}\n            />\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n              Sign Up\n            </Button>\n          </form>\n          {message ? (\n            <Alert message={message} messageType={messageType} />\n          ) : null}\n        </Fragment>\n      </Container>\n    );\n  }\n}\n\nRegister.propTypes = {\n  firebase: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Register);\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\nimport LoadingScreen from \"./Spinner\";\n\nconst locationHelper = locationHelperBuilder({});\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: \"UserIsAuthenticated\",\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty\n});\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport store from \"./store\";\n\nimport Dashboard from \"./components/feeds/Feed_Dashboard\";\nimport AddFeed from \"./components/feeds/Add_Feed\";\nimport EditFeed from \"./components/feeds/Edit_Feed\";\nimport Login from \"./auth/Login\";\nimport Register from \"./auth/Register\";\n\nimport {\n  UserIsAuthenticated,\n  UserIsNotAuthenticated\n} from \"./helpers/withAuthProtect\";\n\nimport Container from \"@material-ui/core/Container\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Container>\n              <Switch>\n                <Route exact path=\"/\" component={Dashboard} />\n                <Route\n                  exact\n                  path=\"/add\"\n                  component={UserIsAuthenticated(AddFeed)}\n                />\n                <Route\n                  exact\n                  path=\"/edit/:id\"\n                  component={UserIsAuthenticated(EditFeed)}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route\n                  exact\n                  path=\"/singup\"\n                  component={UserIsNotAuthenticated(Register)}\n                />\n              </Switch>\n            </Container>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}